
Part 1 - OOP


Information regarding the properties and methods of the Refrigerator class:

The properties of the Refrigerator class are the model of the refrigerator (model), the capacity of the refrigerator in cubic feet (capacity), and the desired temperature setting of the refrigerator in Fahrenheit that defaults to 36 degrees (temperature).

The Refrigerator class has two methods. The first method, set_temperature(), allows setting a desired temperature of the refrigerator. The temperature is set only if the argument passed is between 35 degrees to 38 degrees. The second method, refrigerator_details(), prints the properties of the refrigerator, which are the refrigerator's model, capacity, and desired temperature setting.


Testing the Refrigerator class:
Test 1:
Refrigerator Model: Kitchen Aid
Capacity: 14 cubic feet
Desired Temperature: 36°F
Setting the desired temperature of your refrigerator as 38°F
Refrigerator Model: Kitchen Aid
Capacity: 14 cubic feet
Desired Temperature: 38°F


Test 2:
Refrigerator Model: Whirlpool
Capacity: 18 cubic feet
Desired Temperature: 36°F
Setting the desired temperature of your refrigerator as 40°F
Too hot! Please pick an ideal temperature between 35°F and 38°F
Setting the desired temperature of your refrigerator as -3°F
Too cold! Please pick an ideal temperature between 35°F and 38°F
Refrigerator Model: Whirlpool
Capacity: 18 cubic feet
Desired Temperature: 36°F


Part 2 - LIST


(1)
Please enter the name of a new sport. Current list of sports: []:
basketball

Please enter the name of a new sport. Current list of sports: ['basketball']:
table tennis

Please enter the name of a new sport. Current list of sports: ['basketball', 'table tennis']:
swimming

Please enter the name of a new sport. Current list of sports: ['basketball', 'table tennis', 'swimming']:
football

Please enter the name of a new sport. Current list of sports: ['basketball', 'table tennis', 'swimming', 'football']:
soccer


The final list of 5 sports generated by you:  ['basketball', 'table tennis', 'swimming', 'football', 'soccer']


(2)
Adding a 6th sport between the 3rd and 4th elements in the list
2nd to 5th sports: ['table tennis', 'swimming', 'cricket', 'football']


(3)
Adding a 7th sport to the end of the list of sports
Last sport in the list: baseball


(4)
Number of sports currently in the list: 7
Max value in the list: table tennis
Min value in the list: baseball


(5)
Sports list as a tuple:  ('basketball', 'table tennis', 'swimming', 'cricket', 'football', 'soccer', 'baseball')


Part 3 - TEXT FILE


(1)
Contents of the sport.txt file after initial the population:
basketball
table tennis
swimming
cricket
football
soccer
baseball

(2)
Contents of the sport.txt file after adding three more sports:
basketball
table tennis
swimming
cricket
football
soccer
baseball
golf
rugby
hockey

Total number of sports in the sport.txt file: 10


Part 4 – DICTIONARY


Enter an order number (make sure it is an integer): 1

Order number not found. Please enter a correct order number.
Enter an order number (make sure it is an integer): -2

Order number not found. Please enter a correct order number.
Enter an order number (make sure it is an integer): 108

Order number not found. Please enter a correct order number.
Enter an order number (make sure it is an integer): 105

Order found!
Order Number: 105
Total Order Amount: $750.94
Salesperson: Michael
Number of Items: 6


Part 5 – SET


Set of sports: {'volleyball', 'soccer', 'badminton', 'hockey'}
Number of elements in the set of sports: 4
Set of sports after adding the letters of 'red': {'volleyball', 'badminton', 'hockey', 'r', 'soccer', 'e', 'd'}
Attempting to remove 'v' from set of sports...
Traceback (most recent call last):
  File "main.py", line 245, in <module>
    sportset.remove('v')
KeyError: 'v'
